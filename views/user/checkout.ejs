

<%-include ("../../views/partials/user/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout Page</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: #f7f7f7;
        }

        .checkout-container {
            max-width: 1200px;
            margin: 0 auto;
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 20px;
            padding: 20px;
        }

        .checkout-form, .order-summary {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        h2 {
            color: #333;
            margin-bottom: 20px;
        }

        .address-container {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-bottom: 30px;
        }

        .address-card {
            flex: 1;
            min-width: 300px;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            position: relative;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .address-card:hover {
            border-color: #2196F3;
            box-shadow: 0 2px 8px rgba(33, 150, 243, 0.1);
        }

        .radio-input {
            position: absolute;
            top: 15px;
            right: 15px;
        }

        .add-new-address {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 150px;
            border: 2px dashed #ccc;
            border-radius: 8px;
            cursor: pointer;
            text-align: center;
        }

        .add-new-address:hover {
            border-color: #2196F3;
            color: #2196F3;
        }

        .order-summary .product-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .total-section {
            margin-top: 20px;
            font-weight: bold;
        }

        .place-order-btn {
            background: #2196F3;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 4px;
            width: 100%;
            font-size: 16px;
            cursor: pointer;
            margin-top: 20px;
        }

        @media (max-width: 768px) {
            .checkout-container {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <div class="checkout-container">
        <div class="checkout-form">
            <h2>Select Delivery Address</h2>
            <div class="address-container" >
                <% if (address && address.length > 0) { %> 
                    <% address.forEach((data, index) => { %> 
                        <div class="address-card">
                            <input type="radio" name="address" value="<%= data._id %>" class="radio-input" <%= index === 0 ? 'checked' : '' %>>
                            <div class="address-type">Home</div>
                            <div class="address-field"><strong>Name:</strong> <%= data.name %></div>
                            <div class="address-field"><strong>City:</strong> <%= data.city %></div>
                            <div class="address-field"><strong>Landmark:</strong> <%= data.landMark %></div>
                            <div class="address-field"><strong>State:</strong> <%= data.state %></div>
                            <div class="address-field"><strong>Pincode:</strong> <%= data.pincode %></div>
                            <div class="address-field"><strong>Phone:</strong> <%= data.phone %></div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p>No saved addresses found.</p>
                <% } %>
                
                
                

                <!-- Add New Address -->
                <div class="address-card add-new-address" onclick="window.location.href='/addAddressFromcheckout'">
                    <span>Add New Address</span>
                </div>
                
            </div>

            <h2>Payment Method</h2> 
            <div class="payment-options">
                <div class="payment-option">
                    <input type="radio" id="cod" name="paymentMethod" value="cod" checked >
                    <label for="cod">Cash on Delivery</label>
                </div>
                <div class="payment-option">
                    <input type="radio" id="online" name="paymentMethod" value="onlinepayment" >
                    <label for="online">Online Payment</label>
                </div>
            </div>            
        </div>
        <div class="order-summary">
            <h2>Order Summary</h2>
            <% cart.items.forEach(item => { %>
            <div class="product-item">
                <img src="<%= item.productId.productImage[0] %>" alt="Product" class="product-image" width="80">
                <div class="product-details">
                    <div class="product-name"><%= item.productId.productName %></div>
                    <div class="product-price">$<%= item.productId.salePrice %></div>
                    <div class="quantity-controls">
                        <span class="quantity">Qty: <%= item.quantity %></span>
                    </div>
                </div>
                <b>Total</b>
                <div class="subtotal">$<%= (item.productId.salePrice * item.quantity).toFixed(2) %></div>
            </div>
            <% }); %>
        
            <div class="coupon-section d-flex align-items-center">
                <label for="couponSelect" class="me-2">Select a Coupon:</label>
                <select id="couponSelect" name="couponCode" class="form-control w-auto me-2">
                    <option value="">-- Select Coupon --</option>
                    <% coupons.forEach(coupon => { %>
                        <option  value="<%= coupon.code %>">
                            <%= coupon.code %> - <%= coupon.discountValue %> <%= coupon.discountType === 'percentage' ? '%' : '₹' %>
                        </option>
                    <% }) %>
                </select>
                <button id="applyCouponBtn" class="btn btn-primary">Apply</button>

            </div>
            <p id="couponMessage" style="color: red; margin-top: 5px;"></p>
            <p><a href="/checkout" id="copcancelbtn"></a></p>
            <div class="product-item">
                <span>Sub Total</span>
                <span>₹<span id="subTotal"><%= subTotal.toFixed(2) %></span></span>
            </div>
            <div class="product-item">
                <span>Shipping</span>
                <span>₹<span id="shippingAmount" value="<%= shippingAmount.toFixed(2) %>"><%= shippingAmount.toFixed(2) %></span></span>
            </div>
            <div class="product-item">
                <span>Discount</span>
                <span>-₹<span data-disc="<%= discountAmount.toFixed(2) %>" id="discountAmount"><%= discountAmount.toFixed(2) %></span></span>
            </div>
        
            <div class="total-section">
                <div class="product-item">
                    <strong>Total</strong>
                    <strong>$<span id="totalAmount"><%= total.toFixed(2) %></span></strong>
                </div>
            </div>
        
            <button id="orderplaced" onclick="placeOrder('<%= cart._id %>', '<%= cart.userId %>',)" class="place-order-btn">Place Order</button>
        </div>
        
        <script>
            document.getElementById("applyCouponBtn").addEventListener("click", function () {
                const couponCode = document.getElementById("couponSelect").value;
                console.log(couponCode);
                
                if (!couponCode) {
                    document.getElementById("couponMessage").innerText = "Please select valid a coupon.";
                    // window.location.reload()
                    return;
                }
        
                fetch("/apply-coupon", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ userId: "<%= cart.userId %>", couponCode })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById("subTotal").innerText = data.subTotal;
                        document.getElementById("discountAmount").innerText = data.discountAmount;
                        document.getElementById("shippingAmount").innerText = data.shippingAmount;
                        document.getElementById("totalAmount").innerText = data.total;
                        document.getElementById("couponMessage").innerText = "Coupon applied successfully!";
                        document.getElementById("couponMessage").style.color = "green";
                        document.getElementById("copcancelbtn").innerText="cancelCoupon"
                        document.getElementById("copcancelbtn").style.color="red"
                    } else {
                        document.getElementById("couponMessage").innerText = data.message;
                        document.getElementById("couponMessage").style.color = "red";
                    }
                })
                .catch(error => console.error("Error:", error));
            });
        </script>
        
      

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <!-- <script>
        document.querySelector('.add-new-address').addEventListener('click', function() {
            window.location.href = "/addAddress"; // Change this to your desired route
        });
      </script> -->
      

<script>


function getSelectedAddress() {
    return document.querySelector('input[name="address"]:checked')?.value;
}

function getpaymentMethod(){
    return document.querySelector('input[name="paymentMethod"]:checked')?.value;  

}


async function placeOrder(cartId, userId) {
    let selectedAddress = getSelectedAddress();
    let paymentMethod = getpaymentMethod();
    let subTotal=document.getElementById('totalAmount')
    let couponCode=document.getElementById("couponSelect").value
    let subTotalvalue = subTotal.innerText.trim(); 
    let discountElement = document.getElementById("discountAmount");
    let discountValue = discountElement.innerText.trim();
     
    console.log(discountValue);
    
    
    
    console.log(paymentMethod);
    
    if (!selectedAddress) {
        swal({
            title: "No Address Selected",
            text: "Please select an address before placing an order.",
            icon: "warning",
            button: "OK"
        });
        return;
    }

    if (paymentMethod === "onlinepayment") {
        try {
            // Step 1: Request backend to create Razorpay order
            let response = await fetch('/create-orderRazorpay', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({amount : subTotalvalue})  // Replace with actual amount
            });
                    
            let orderData = await response.json();
            if (!orderData || !orderData.id) {
                throw new Error("Failed to create Razorpay order");
            }

            // Step 2: Initialize Razorpay payment options
            let options = {
                "key": "rzp_test_T7fmLotqdQ3Hde", // Replace with actual key
                "amount": orderData.amount, // Amount in paisa
                "currency": "INR",
                "name": "Your Store",
                "description": "Order Payment",
                "order_id": orderData.id, // Razorpay order ID from backend
                "handler": function (response) {
                    // Step 3: On success, place order in backend
                    fetch('/orderSuccess', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ 
                            cartId, 
                            userId, 
                            selectedAddress, 
                            paymentMethod,
                            paymentId: response.razorpay_payment_i,
                            subTotalvalue,
                            couponCode
                        })
                    })
                    .then(res => res.json())
                    .then(result => {
                        if (result.success) {
                            swal({
                                title: "Order Placed!",
                                text: "Your order has been placed successfully.",
                                icon: "success",
                                button: "OK"
                            }).then(() => {
                                window.location.href = `/orderSuccess?orderId=${result.orderId}`;
                            });
                        } else {
                            swal({
                                title: "Order Failed",
                                text: `Error: ${result.message}`,
                                icon: "error",
                                button: "OK"
                            });
                        }
                    });
                },
                "prefill": {
                    "name": "Customer Name", 
                    "email": "customer@example.com",
                    "contact": "9999999999"
                },
                "theme": {
                    "color": "#3399cc"
                }
            };

            // Step 4: Open Razorpay Payment Window
            let rzp = new Razorpay(options);

            
rzp.on('payment.failed', async function(response) {
    
    await Swal.fire({
    title: 'Payment Failed',
    text: 'Payment failed, redirecting to the checkout page',
    icon: 'error',
    showConfirmButton: true, 
    confirmButtonText: 'OK', 
    timer: null, 
    timerProgressBar: false 
}).then(() => {
    window.location.href = `/profile`;
});
    try {
        // Update order status to Failed
        const updateResponse = await fetch('/failed-orderRazorpay', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                cartId, 
                userId, 
                selectedAddress, 
                paymentMethod,
                subTotalvalue,
                couponCode,
                discountValue,
            })
        });

        if (!updateResponse.ok) {
            throw new Error('Failed to update order status');
        }

      

    } catch (error) {
        console.error('Error handling payment failure:', error);
        Swal.fire('Error', 'Something went wrong. Please try again.', 'error')
            .then(() => {
                window.history.back();
                
            });
    }
});

				

            rzp.open();
        } catch (error) {
            console.error("Razorpay Payment Error:", error);
            swal({
                title: "Payment Error",
                text: "Error in processing Razorpay payment. Please try again!",
                icon: "error",
                button: "OK"
            });
        }
    } else {
        // Process normal order (COD, Wallet, etc.)
        try {
            fetch('/orderSuccess', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ cartId, userId, selectedAddress, paymentMethod,discountValue,subTotalvalue,couponCode })
            })
            .then(response => response.json()) 
            .then(result => {
                if (result.success) {
                    swal({
                        title: "Order Placed!",
                        text: "Your order has been placed successfully.",
                        icon: "success",
                        button: "OK"
                    }).then(() => {
                        window.location.href = `/orderSuccess?orderId=${result.orderId}`;
                    });
                } else {
                    swal({
                        title: "Order Failed",
                        text: `Error: ${result.message}`,
                        icon: "error",
                        button: "OK"
                    });
                }
            })
            .catch(error => {
                console.error("Error:", error);
                swal({
                    title: "Error",
                    text: "Error in placing order. Please try again!",
                    icon: "error",
                    button: "OK"
                });
            });
        } catch (error) {
            console.error("Unexpected Error:", error);
        }
    }
}




</script>
</body>
</html>
<%-include ("../../views/partials/user/footer") %>
