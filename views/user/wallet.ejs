<%-include ("../../views/partials/user/header") %>
<head>
    
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0px;
            background-color: #f0f0f0;
        }

        .wallet-container {
            max-width: 1000px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .wallet-header {
            text-align: center;
            margin-bottom: 20px;
        }

        .wallet-balance {
            background: linear-gradient(135deg, #1e88e5,#0091d5);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            margin-bottom: 20px;
        }

        .balance-title {
            font-size: 16px;
            margin-bottom: 10px;
        }

        .balance-amount {
            font-size: 32px;
            font-weight: bold;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
            background: white;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f5f5f5;
            font-weight: bold;
        }

        tr:hover {
            background-color: #f9f9f9;
        }

        .credit {
            color: #2e7d32;
            font-weight: bold;
        }

        .debit {
            color: #c62828;
            font-weight: bold;
        }

        /* Status styles */
        .status-tag {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
            display: inline-block;
        }

        .status-success {
            background-color: #e8f5e9;
            color: #2e7d32;
        }

        .status-pending {
            background-color: #fff3e0;
            color: #f57c00;
        }

        .status-failed {
            background-color: #ffebee;
            color: #c62828;
        }

        .status-processing {
            background-color: #e3f2fd;
            color: #1565c0;
        }

        /* Pagination styles */
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-top: 20px;
        }

        .pagination button {
            padding: 8px 16px;
            background: #1e88e5;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
        }

        .pagination button:disabled {
            background: #ccc;
            cursor: not-allowed;
        }

        .page-info {
            font-size: 14px;
            color: #666;
        }

        /* Loading state */
        .loading {
            text-align: center;
            padding: 20px;
            color: #666;
        }

        /* Error state */
        .error {
            color: #c62828;
            text-align: center;
            padding: 20px;
        }
    </style>
</head>
<body>
    <div class="wallet-container">
        <div class="wallet-header">
            <h1>My Digital Wallet</h1>
        </div>

        <div class="wallet-balance">
            <div class="balance-title">Available Balance</div>
            <div class="balance-amount">₹<span id="balance"><%= balance %></span></div>
        </div>

        <table>
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Date</th>
                    <th>Type</th>
                    <th>Amount</th>
                    <!-- <th>Description</th> -->
                    <th>Status</th>
                </tr>
            </thead>
            <tbody id="transactionList">
                <% transactions.forEach((tran,index) => {%>

                <tr>
                    <td><%=index+1 %></td>
                    <td><%= new Date(tran.date).toLocaleDateString('en-GB') %></td>
                    <td><%= tran.type %></td>
                    <td><%= tran.amount %></td>
                    <td>   <%= tran.status %></td>
                </tr>                
               <% })%> 
                <!-- Transactions will be inserted here -->
            </tbody>
        </table>

        <div class="pagination">
            <button id="prevBtn" onclick="previousPage()">Previous</button>
            <span class="page-info">Page <span id="currentPage">1</span></span>
            <button id="nextBtn" onclick="nextPage()">Next</button>
        </div>
    </div>

    <script>
        // Current page state
        let currentPage = 1;
        let totalPages = 1;

        // Example transaction for reference
        // const exampleTransaction = {
        //     type: 'credit',
        //     amount: 5000.00,
        //     description: 'Refund for Order #12345',
        //     status: 'success',
        //     date: '2024-02-09T10:30:00'
        // };

        // Function to format currency
        function formatCurrency(amount) {
            return new Intl.NumberFormat('en-IN', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            }).format(amount);
        }

        // Function to format date
        function formatDate(dateString) {
            return new Date(dateString).toLocaleString('en-IN', {
                year: 'numeric',
                month: 'short',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // Function to get status class
        function getStatusClass(status) {
            const statusMap = {
                'success': 'status-success',
                'pending': 'status-pending',
                'failed': 'status-failed',
                'processing': 'status-processing'
            };
            return statusMap[status] || 'status-pending';
        }

        // Function to display transactions
        function displayTransactions(transactions) {
            const transactionList = document.getElementById('transactionList');
            let html = '';

            transactions.forEach((transaction, index) => {
                const statusClass = getStatusClass(transaction.status);
                const typeClass = transaction.type === 'credit' ? 'credit' : 'debit';
                const displayIndex = (currentPage - 1) * 10 + index + 1;

                html += `
                    <tr>
                        <td>${displayIndex}</td>
                        <td>${formatDate(transaction.date)}</td>
                        <td class="${typeClass}">${transaction.type.toUpperCase()}</td>
                        <td>₹${formatCurrency(transaction.amount)}</td>
                        <td>${transaction.description}</td>
                        <td><span class="status-tag ${statusClass}">${transaction.status.toUpperCase()}</span></td>
                    </tr>
                `;
            });

            transactionList.innerHTML = html;
        }

        // Function to update pagination
        function updatePagination() {
            document.getElementById('currentPage').textContent = currentPage;
            document.getElementById('prevBtn').disabled = currentPage === 1;
            document.getElementById('nextBtn').disabled = currentPage === totalPages;
        }

        // Function to fetch transactions from backend
        async function fetchTransactions() {
            try {
                // Replace with your API endpoint
                const response = await fetch(`/api/transactions?page=${currentPage}`);
                const data = await response.json();

                // Update total pages
                totalPages = data.totalPages;

                // Update balance if provided
                if (data.balance) {
                    document.getElementById('balance').textContent = formatCurrency(data.balance);
                }

                // Display transactions
                displayTransactions(data.transactions);
                updatePagination();

            } catch (error) {
                console.error('Error fetching transactions:', error);
                // Show example data if API fails
                displayTransactions([exampleTransaction]);
            }
        }

        // Pagination functions
        function previousPage() {
            if (currentPage > 1) {
                currentPage--;
                fetchTransactions();
            }
        }

        function nextPage() {
            if (currentPage < totalPages) {
                currentPage++;
                fetchTransactions();
            }
        }

        // Initial load
        // fetchTransactions();
    </script>
</body>
</html>