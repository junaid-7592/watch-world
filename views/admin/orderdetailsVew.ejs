<%- include("../../views/partials/admin/header") %>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Order Details</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            padding: 0px;
            background-color: #f4f6f8;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
            padding-bottom: 10px;
            border-bottom: 2px solid #eee;
        }

        .order-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 6px;
        }

        .info-item {
            margin-bottom: 10px;
        }

        .info-item label {
            font-weight: bold;
            color: #666;
            display: block;
            margin-bottom: 5px;
        }

        .shipping-address {
            margin-bottom: 30px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 6px;
        }

        .order-items {
            margin-bottom: 30px;
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f4f6f8;
            font-weight: bold;
        }

        .product-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 4px;
        }

        .status-management {
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 6px;
        }

        .status-buttons {
            display: flex;
            gap: 10px;
            margin-top: 10px;
            align-items: center;
        }

        button {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .change-status {
            background-color: #007bff;
            color: white;
        }

        .change-status:hover {
            background-color: #0056b3;
        }

        .cancel-order {
            background-color: #dc3545;
            color: white;
        }

        .cancel-order:hover {
            background-color: #c82333;
        }

        .delivered {
            color: #28a745;
            font-weight: bold;
        }

        .canceled {
            color: #dc3545;
            font-weight: bold;
        }

        .section-title {
            font-size: 1.2em;
            font-weight: bold;
            margin-bottom: 15px;
            color: #333;
        }

        /* New styles for status dropdown */
        .status-select {
            padding: 8px;
            border-radius: 4px;
            border: 1px solid #ddd;
            margin-right: 10px;
            font-size: 14px;
            min-width: 150px;
        }

        .status-select:focus {
            outline: none;
            border-color: #007bff;
        }

        .status-wrapper {
            display: flex;
            align-items: center;
            gap: 10px;
        }
    </style>
</head>
<body>
    
    <div class="container">
        <h1>Order Details</h1>

        <!-- Order Information -->
        <div class="order-info">
            <div class="info-item">
                <label>Order Date</label>
                <div><%= new Date(order?.createdAt).toDateString() %></div>
            </div>
            <div class="info-item">
                <label>Total Amount</label>
                <div><%=order.totalPrice%></div>
            </div>
            <div class="info-item">
                <label>Discount</label>
                <div>₹<%= order.discount %></div>
            </div>
            <div class="info-item">
                <label>Payment Method</label>
                <div><%= order.paymentMethod  %></div>
            </div>
            <div class="info-item">
                <label>Payment Status</label>
                <div><%=order.status%></div>
            </div>
            <%if(order.couponCode){%>
                <div class="info-item">
                    <label>Coupon Code</label>
                    <div><%=order.couponCode%></div>
                </div>
            <%}%>
        </div>

        <!-- Shipping Address -->
        <div class="shipping-address">
            <div class="section-title">Shipping Address</div>
            <div class="info-item">
               
            <div class="info-item">
                <label>Address</label>
                <div><%=order.address  %></div>
            </div>
        </div>

        <!-- Order Items -->
        <div class="order-items">
            <div class="section-title">Order Items</div>
            <table>
                <thead>
                    
                    <tr>
                        <th>Product</th>
                        <th>Image</th>
                        <th>Quantity</th>
                        <th>Unit Price</th>
                        <th>Total Price</th>
                        <th>OrderStatus</th>
                    </tr>
                </thead>
                <tbody>
                    <% order.orderedItems?.forEach((item, index) => { %>
                        <tr>
                            <td><%=item?.product?.productName %></td>
                            <td><img style="width: 100px; height: 100px;" src="<%=item.product.productImage[0]%>"></td>
                            
                            <td><%= item.quantity %></td>
                            <td>₹<%= item.price.toFixed(2) %></td>
                            <td>₹<%= order.totalPrice.toFixed(2) %></td>
                            <td class="delivered"><%= order.status %></td>
                        </tr>
                        <% }) %>
                        

                    
                </tbody>
            </table>

           <% if (order.status == "Cancelled") { %>
            <label for="cancelResone">cancel Resone</label>
            <input type="text" value="<%= order.cancelReason %>" readonly>
            
           <% } %>
        </div>

        
        <div class="status-management">
            <div class="section-title">Order Status Management</div>
            <div class="status-wrapper">
                <select class="status-select" id="orderStatus">
                    <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                    <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                    <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                    <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                    <!-- <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option> -->
                </select>
                <button class="change-status" onclick="updateOrderStatus('<%= order._id %>')" >
                        
                    Update Status
                </button>
                <button class="cancel-order" onclick="cancelOrder('<%= order._id %>')"
                        <%= order.status === 'Delivered' || order.status === 'Cancelled' ? 'disabled' : '' %>>
                    Cancel Order
                </button>
            </div>
            <% if (order.status === "Return-Request") { %>
                <!-- Return Request Section -->

                <div id="return" style="padding-top: 50px;">
                <form id="returnReasonForm" action="admin/order/<%= order._id %>/returnstatus" method="POST">
                  <div class="return-reason-section mt-4">
                    <h5>Return Request</h5>
                    <p><strong>Reason:</strong> <%= order.returnReason
                         %></p>
                    <div class="form-actions">
                      <button type="submit" name="action" value="approve" class="btn btn-success">Approve</button>
                      <button type="submit" name="action" value="reject" class="btn btn-danger">Reject</button>
                    </div>
                  </div>
                </form>
                </div>
                <%}%>
        </div>
        
        <!-- Add this script section at the bottom of your EJS file -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
        <script>
        async function updateOrderStatus(orderId) {
            const newStatus = document.getElementById('orderStatus').value;
            console.log(newStatus);
            
            try {
                const response = await fetch(`/admin/orders/update-status/${orderId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ status: newStatus })
                });
        
                const data = await response.json();
                
                if (data.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Order status updated successfully',
                        icon: 'success'
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: data.message || 'Failed to update order status',
                        icon: 'error'
                    });
                }
            } catch (error) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong',
                    icon: 'error'
                });
            }
        }
        
        async function cancelOrder(orderId) {
            try {
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, cancel it!'
                });
        
                if (result.isConfirmed) {
                    const response = await fetch(`/admin/orders/cancel-status/${orderId}`, {
                        method: 'PUT'
                    });
        
                    const data = await response.json();
                    
                    if (data.success) {
                        Swal.fire(
                            'Cancelled!',
                            'Order has been cancelled.',
                            'success'
                        ).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            data.message || 'Failed to cancel order',
                            'error'
                        );
                    }
                }
            } catch (error) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong',
                    icon: 'error'
                });
            }
        }


// ----------------------------------------------------

 const form = document.getElementById('returnReasonForm');
form.addEventListener('submit', async function (e) {
    e.preventDefault();

    const orderId = '<%= order._id %>';
    const actionButton = document.querySelector('button[name="action"]:focus');
    const action = actionButton?.value;

    if (!action) {
        Swal.fire({
            icon: 'error',
            title: 'Action Missing',
            text: 'No action was selected (Approve/Reject). Please try again.',
            confirmButtonText: 'Ok',
        });
        return;
    }
    console.log(action)

    try {
        const response = await fetch(`/admin/order/${orderId}/returnstatus`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ action }),
        });

        const data = await response.json();
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Return Request Status Updated',
                text: data.message,
                confirmButtonText: 'Ok',
            }).then(() => {
                window.location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message,
                confirmButtonText: 'Ok',
            });
        }
    } catch (error) {
        console.error(error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while updating the return request status.',
            confirmButtonText: 'Ok',
        });
    }
});



        </script>
       

   